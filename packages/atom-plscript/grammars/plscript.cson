'scopeName': 'text.plscript'
'name': 'PLScript'
'fileTypes': [
  'dat',
  'pls',
  'plscript',
  'pg',
  'plh'
]
# 'firstLineMatch': '''
# '''
'patterns': [
  {
    'name': 'meta.tag.preprocessor.xml'
    'begin': '(</?)'
    'captures':
      '1':
        'name': 'punctuation.definition.tag.xml'
      '2':
        'name': 'entity.name.tag.xml'
    'end': '([\n>])'
    'patterns': [
      {
        'match': '(name)'
        'name': 'string.quoted.double.js'
      }
      {
        'match': '''(Script_func|Synthetic|Val_list|Str|Button|Column_spec(_list)?|
          Text_elem|int|Link_elem|Anchor)'''
        'name': 'special.variable.text.plscript'
      }
      {
        'match': '([a-zA-Z_])+'
        'name': 'entity.other.attribute-name.xml'
      }
      {
        'include': '#numbers'
      }
    ]
  }

  {
    'match': '((\b|=|;|\\()ret(\b|=))'
    'name': 'support.class.js'
  }

  {
    'begin': '(dat/)'
    'name': 'filename.text.plscript'
    'end': '\n'
  }
  {

  }
  {
    'match': '''(find_context_value|make_context|get_property(_list)?|find_ancestor(_type)?|
      add_arg)'''
    'name': 'special.function.text.plscript'
  }
  {
    'match': '(env|form_item|form_object|top_parent|context|parent)'
    'name': 'special.object.text.plscript'
  }

#try to clean and improve along your way


  {
    'match': '(?:(?<=\\.{3})|(?<!\\.)\\b)(?<!\\$)(super|this|arg)(?!\\s*:|\\$)\\b'
    'name': 'variable.language.js'
  }
  {
    'match': '(?<!\\.)\\b(for|if|else|break|while|foreach)(?!\\s*:)\\b'
    'name': 'keyword.control.js'
  }

  # TODO: setup util scoping for actual function names

  {
    'include': '#strings'
  }
  {
    'include': '#comments'
  }

  {
    'match': '(?<!\\.)\\b(function|method|ret)(?!\\s*:)\\b'
    'name': 'storage.type.js'
  }

  {
    'match': '(?<!\\.)\\b(true|false)(?!\\s*:)\\b'
    'name': 'constant.language.boolean.$1.js'
  }
  {
    'match': '(?<!\\.)\\b(null)(?!\\s*:)\\b'
    'name': 'constant.language.null.js'
  }
  {
    'match': '''(?x) (?<!\\$) \\b
      (Script_func|Synthetic|Val_list)
      \\b
    '''
    'name': 'support.class.js'
  }
  {
    'match': '((robert(\\.| )?)?pirtle(\\.robert)?)'
    'name': 'special.users.text.plscript'
  }



###########
###########

  {
    'match': '(?<!\\.)\\b(module|exports|__filename|__dirname|global|process)(?!\\s*:)\\b'
    'name': 'support.variable.js'
  }
  {
    'match': '\\b(Infinity|NaN|undefined)\\b'
    'name': 'constant.language.js'
  }
  {
    'begin': '(?<=[\\[=(?:+,!]|^|return|=>|&&|\\|\\|)\\s*(/)(?![/*+?])(?=.*/)'
    'beginCaptures':
      '1':
        'name': 'punctuation.definition.string.begin.js'
    'end': '(/)[gimuy]*'
    'endCaptures':
      '1':
        'name': 'punctuation.definition.string.end.js'
    'name': 'string.regexp.js'
    'patterns': [
      {
        'include': 'source.js.regexp'
      }
    ]
  }

  {
    'include': '#operators'
  }
  {
    'include': '#method_calls'
  }
  {
    'include': '#function_calls'
  }
  {
    'include': '#numbers'
  }
  {
    'include': '#objects'
  }
  {
    'include': '#properties'
  }
  # {
  #   'match': '((?<!\\.|[\\w$])(?![_\\$]+[^A-Z0-9_$])\\$*\\b(?:[A-Z_$][A-Z0-9_$]*)\\b\\$*)'
  #   'name': 'constant.other.js'
  # }
  {
    'match': '(?<!\\$)\\b[0-9]+[\\w$]*'
    'name': 'invalid.illegal.identifier.js'
  }
  {
    'match': '\\;'
    'name': 'punctuation.terminator.statement.js'
  }
  {
    'match': ','
    'name': 'meta.delimiter.object.comma.js'
  }
  {
    'match': '\\.'
    'name': 'meta.delimiter.method.period.js'
  }
  {
    # Allows the special return snippet to fire.
    'match': '({)(})'
    'captures':
      '1':
        'name': 'punctuation.section.scope.begin.js'
      '2':
        'name': 'punctuation.section.scope.end.js'
  }
  {
    'begin': '{'
    'beginCaptures':
      '0':
        'name': 'meta.brace.curly.js'
    'end': '}'
    'endCaptures':
      '0':
        'name': 'meta.brace.curly.js'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  }
  {
    'begin': '\\('
    'beginCaptures':
      '0':
        'name': 'meta.brace.round.js'
    'end': '\\)'
    'endCaptures':
      '0':
        'name': 'meta.brace.round.js'
    'patterns': [
      {
        'include': '$self'
      }
    ]
  }
  {
    'match': '\\[|\\]'
    'name': 'meta.brace.square.js'
  }
  {
    'match': '\\A#!.*$'
    'name': 'comment.line.shebang.js'
  }
]
'repository':
  'numbers':
    'patterns': [
      {
        'match': '\\b(?<!\\$)0(x|X)[0-9a-fA-F]+\\b(?!\\$)'
        'name': 'constant.numeric.hex.js'
      }
      {
        'match': '\\b(?<!\\$)0(b|B)[01]+\\b(?!\\$)'
        'name': 'constant.numeric.binary.js'
      }
      {
        'match': '\\b(?<!\\$)0(o|O)?[0-7]+\\b(?!\\$)'
        'name': 'constant.numeric.octal.js'
      }
      {
        'match': '''(?x)
          (?<!\\$)(?:
            (?:\\b[0-9]+(\\.)[0-9]+[eE][+-]?[0-9]+\\b)| # 1.1E+3
            (?:\\b[0-9]+(\\.)[eE][+-]?[0-9]+\\b)|       # 1.E+3
            (?:\\B(\\.)[0-9]+[eE][+-]?[0-9]+\\b)|       # .1E+3
            (?:\\b[0-9]+[eE][+-]?[0-9]+\\b)|            # 1E+3
            (?:\\b[0-9]+(\\.)[0-9]+\\b)|                # 1.1
            (?:\\b[0-9]+(\\.)\\B)|                      # 1.
            (?:\\B(\\.)[0-9]+\\b)|                      # .1
            (?:\\b[0-9]+\\b(?!\\.))                     # 1
          )(?!\\$)
        '''
        'captures':
          '0':
            'name': 'constant.numeric.decimal.js'
          '1':
            'name': 'meta.delimiter.decimal.period.js'
          '2':
            'name': 'meta.delimiter.decimal.period.js'
          '3':
            'name': 'meta.delimiter.decimal.period.js'
          '4':
            'name': 'meta.delimiter.decimal.period.js'
          '5':
            'name': 'meta.delimiter.decimal.period.js'
          '6':
            'name': 'meta.delimiter.decimal.period.js'
      }
    ]
  'operators':
    'patterns': [
      {
        'match': '%=|\\+=|-=|\\*=|(?<!\\()/='
        'name': 'keyword.operator.assignment.compound.js'
      }
      {
        'match': '&=|\\^=|<<=|>>=|>>>=|\\|='
        'name': 'keyword.operator.assignment.compound.bitwise.js'
      }
      {
        'match': '<<|>>>|>>'
        'name': 'keyword.operator.bitwise.shift.js'
      }
      {
        'match': '!==|!=|<=|>=|===|==|<|>'
        'name': 'keyword.operator.comparison.js'
      }
      {
        'match': '&&|!!|!|\\|\\|'
        'name': 'keyword.operator.logical.js'
      }
      {
        'match': '&|\\||\\^|~'
        'name': 'keyword.operator.bitwise.js'
      }
      {
        'match': '=|:'
        'name': 'keyword.operator.assignment.js'
      }
      {
        'match': '--'
        'name': 'keyword.operator.decrement.js'
      }
      {
        'match': '\\+\\+'
        'name': 'keyword.operator.increment.js'
      }
      {
        'match': '%|\\*|/|-|\\+'
        'name': 'keyword.operator.js'
      }
    ]
  'strings':
    'patterns': [
      {
        'begin': '\''
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.js'
        'end': '\''
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.js'
        'name': 'string.quoted.single.js'
        'patterns': [
          {
            'include': '#string_escapes'
          }
          {
            'match': "[^']*[^\\n\\r'\\\\]$"
            'name': 'invalid.illegal.string.js'
          }
        ]
      }
      {
        'begin': '"'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.js'
        'end': '"'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.js'
        'name': 'string.quoted.double.js'
        'patterns': [

          {
            'include': '#string_escapes'
          }
          {
            'match': '(Script_func|Synthetic|Val_list)'
            'name': 'support.function.js'
          }
          {
            'match': '[^"]*[^\\n\\r"\\\\]$'
            'name': 'invalid.illegal.string.js'
          }
        ]
      }
      {
        'begin': '((\\w+)?(html|HTML|Html))\\s*(`)'
        'beginCaptures':
          '1':
            'name': 'entity.name.function.js'
          '4':
            'name': 'punctuation.definition.string.begin.js'
        'end': '`'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.js'
        'name': 'string.quoted.template.html.js'
        'patterns': [
          {
            'include': '#string_escapes'
          }
          {
            'include': '#interpolated_js'
          }
          {
            'include': 'text.html.basic'
          }
        ]
      }
      {
        'begin': '(?<=innerHTML)\\s*(\\+?=)\\s*(?=`)'
        'beginCaptures':
          '1':
            'name': 'keyword.operator.assignment.js'
        'end': '(?<=`)'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.js'
        'contentName': 'string.quoted.template.html.js'
        'patterns': [
          {
            'begin': '`'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.string.begin.js'
            'end': '`'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.string.end.js'
            'patterns': [
              {
                'include': '#string_escapes'
              }
              {
                'include': '#interpolated_js'
              }
              {
                'include': 'text.html.basic'
              }
            ]
          }
        ]
      }
      {
        'begin': '(Relay\\.QL)\\s*(`)'
        'beginCaptures':
          '1':
            'name': 'entity.name.function.js'
          '2':
            'name': 'punctuation.definition.string.begin.js'
        'end': '`'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.js'
        'name': 'string.quoted.template.graphql.js'
        'patterns': [
          {
            'include': '#string_escapes'
          }
          {
            'include': '#interpolated_js'
          }
          {
            'include': 'source.graphql'
          }
        ]
      }
      {
        'begin': '(sql|SQL|Sql)\\s*(`)'
        'beginCaptures':
          '1':
            'name': 'entity.name.function.js'
          '2':
            'name': 'punctuation.definition.string.begin.js'
        'end': '`'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.js'
        'name': 'string.quoted.template.sql.js'
        'patterns': [
          {
            'include': '#string_escapes'
          }
          {
            'include': '#interpolated_js'
          }
          {
            'include': 'source.sql'
          }
        ]
      }
      {
        'begin': '`'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.string.begin.js'
        'end': '`'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.string.end.js'
        'name': 'string.quoted.template.js'
        'patterns': [
          {
            'include': '#string_escapes'
          }
          {
            'include': '#interpolated_js'
          }
        ]
      }
    ]
  'string_escapes':
    'patterns': [
      {
        'match': '\\\\u(?![A-Fa-f0-9]{4}|{[A-Fa-f0-9]+})[^\'"]*'
        'name': 'invalid.illegal.unicode-escape.js'
      }
      {
        'match': '\\\\u(?:[A-Fa-f0-9]{4}|({)([A-Fa-f0-9]+)(}))'
        'name': 'constant.character.escape.js'
        'captures':
          '1':
            'name': 'punctuation.definition.unicode-escape.begin.bracket.curly.js'
          '2':
            'patterns': [
              {
                # Max codepoint: \u{10FFFF}
                'match': '[A-Fa-f\\d]{7,}|(?!10)[A-Fa-f\\d]{6}'
                'name': 'invalid.illegal.unicode-escape.js'
              }
            ]
          '3':
            'name': 'punctuation.definition.unicode-escape.end.bracket.curly.js'
      }
      {
        'match': '\\\\(x\\h{2}|[0-2][0-7]{0,2}|3[0-6][0-7]?|37[0-7]?|[4-7][0-7]?|.)'
        'name': 'constant.character.escape.js'
      }
    ]
  # 'function_params':
  #   'patterns': [
  #     {
  #       'begin': '\\('
  #       'beginCaptures':
  #         '0':
  #           'name': 'punctuation.definition.parameters.begin.bracket.round.js'
  #       'end': '\\)'
  #       'endCaptures':
  #         '0':
  #           'name': 'punctuation.definition.parameters.end.bracket.round.js'
  #       'name': 'meta.parameters.js'
  #       'patterns': [
  #         {
  #           'match': '(\\.\\.\\.)([a-zA-Z_$][\\w$]*)'
  #           'captures':
  #             '1':
  #               'name': 'keyword.operator.spread.js'
  #             '2':
  #               'name': 'variable.parameter.rest.function.js'
  #         }
  #         {
  #           'include': '$self'
  #         }
  #         {
  #           'match': '[a-zA-Z_$][\\w$]*'
  #           'name': 'variable.parameter.function.js'
  #         }
  #       ]
  #     }
  #   ]
  'function_body':
    'patterns': [
      {
        'begin': '{'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.function.body.begin.bracket.curly.js'
        'end': '}'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.function.body.end.bracket.curly.js'
        'patterns': [
          {
            'include': '$self'
          }
        ]
      }
    ]
  'function_innards':
    'patterns': [
      {
        'match': '(?:\\b(async)\\b\\s*)?\\b(function)\\b(?:\\s*(\\*))?'
        'captures':
          '1':
            'name': 'storage.modifier.async.js'
          '2':
            'name': 'storage.type.function.js'
          '3':
            'name': 'storage.modifier.generator.js'
      }
      {
        'match': '[a-zA-Z_$][\\w$]*(?=\\s*\\()'
        'name': 'entity.name.function.js'
      }
      {
        'include': '#function_params'
      }
      {
        'include': '#comments'
      }
    ]
  'arrow_function_innards':
    'patterns': [
      {
        'match': '=>'
        'name': 'storage.type.function.arrow.js'
      }
      {
        'include': '#function_params'
      }
      {
        'match': '([a-zA-Z_$][\\w$]*)(?=\\s*=>)'
        'captures':
          '0':
            'name': 'meta.parameters.js'
          '1':
            'name': 'variable.parameter.function.js'
      }
      {
        'match': '(\\d[\\w$]*)'
        'captures':
          '0':
            'name': 'meta.parameters.js'
          '1':
            'name': 'invalid.illegal.identifier.js'
      }
    ]
  'arguments':
    'patterns': [
      {
        'begin': '\\('
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.arguments.begin.bracket.round.js'
        'end': '\\)'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.arguments.end.bracket.round.js'
        'name': 'meta.arguments.js'
        'patterns': [
          {
            'include': '$self'
          }
        ]
      }
    ]
  # 'method_calls':
  #   'patterns': [
  #     {
  #       # .methodCall(arg1, "arg2", [...])
  #       'begin': '(\\.)\\s*([\\w$]+)\\s*(?=\\()'
  #       'beginCaptures':
  #         '1':
  #           'name': 'meta.delimiter.method.period.js'
  #         '2':
  #           'patterns': [
  #             {
  #               'match': '''(?x)
  #                 \\bon(Rowsinserted|Rowsdelete|Rowenter|Rowexit|Resize|Resizestart|Resizeend|Reset|
  #                 Readystatechange|Mouseout|Mouseover|Mousedown|Mouseup|Mousemove|
  #                 Before(cut|deactivate|unload|update|paste|print|editfocus|activate)|
  #                 Blur|Scrolltop|Submit|Select|Selectstart|Selectionchange|Hover|Help|
  #                 Change|Contextmenu|Controlselect|Cut|Cellchange|Clock|Close|Deactivate|
  #                 Datasetchanged|Datasetcomplete|Dataavailable|Drop|Drag|Dragstart|Dragover|
  #                 Dragdrop|Dragenter|Dragend|Dragleave|Dblclick|Unload|Paste|Propertychange|Error|
  #                 Errorupdate|Keydown|Keyup|Keypress|Focus|Load|Activate|Afterupdate|Afterprint|Abort)\\b
  #               '''
  #               'name': 'support.function.event-handler.js'
  #             }
  #             {
  #               'match': '''(?x)
  #                 \\b(shift|showModelessDialog|showModalDialog|showHelp|scroll|scrollX|scrollByPages|
  #                 scrollByLines|scrollY|scrollTo|stop|strike|sizeToContent|sidebar|signText|sort|
  #                 sup|sub|substr|substring|splice|split|send|set(Milliseconds|Seconds|Minutes|Hours|
  #                 Month|Year|FullYear|Date|UTC(Milliseconds|Seconds|Minutes|Hours|Month|FullYear|Date)|
  #                 Time|Hotkeys|Cursor|ZOptions|Active|Resizable|RequestHeader)|search|slice|
  #                 savePreferences|small|home|handleEvent|navigate|char|charCodeAt|charAt|concat|
  #                 contextual|confirm|compile|clear|captureEvents|call|createStyleSheet|createPopup|
  #                 createEventObject|to(GMTString|UTCString|String|Source|UpperCase|LowerCase|LocaleString)|
  #                 test|taint|taintEnabled|indexOf|italics|disableExternalCapture|dump|detachEvent|unshift|
  #                 untaint|unwatch|updateCommands|join|javaEnabled|pop|push|plugins.refresh|paddings|parse|
  #                 print|prompt|preference|enableExternalCapture|exec|execScript|valueOf|UTC|find|file|
  #                 fileModifiedDate|fileSize|fileCreatedDate|fileUpdatedDate|fixed|fontsize|fontcolor|
  #                 forward|fromCharCode|watch|link|load|lastIndexOf|anchor|attachEvent|atob|apply|alert|
  #                 abort|routeEvents|resize|resizeBy|resizeTo|recalc|returnValue|replace|reverse|reload|
  #                 releaseCapture|releaseEvents|go|get(Milliseconds|Seconds|Minutes|Hours|Month|Day|Year|FullYear|
  #                 Time|Date|TimezoneOffset|UTC(Milliseconds|Seconds|Minutes|Hours|Day|Month|FullYear|Date)|
  #                 Attention|Selection|ResponseHeader|AllResponseHeaders)|moveBy|moveBelow|moveTo|
  #                 moveToAbsolute|moveAbove|mergeAttributes|match|margins|btoa|big|bold|borderWidths|blink|back)\\b
  #               '''
  #               'name': 'support.function.js'
  #             }
  #             {
  #               'match': '''(?x)
  #                 \\b(acceptNode|add|addEventListener|addTextTrack|adoptNode|after|animate|append|
  #                 appendChild|appendData|before|blur|canPlayType|captureStream|
  #                 caretPositionFromPoint|caretRangeFromPoint|checkValidity|clear|click|
  #                 cloneContents|cloneNode|cloneRange|close|closest|collapse|
  #                 compareBoundaryPoints|compareDocumentPosition|comparePoint|contains|
  #                 convertPointFromNode|convertQuadFromNode|convertRectFromNode|createAttribute|
  #                 createAttributeNS|createCaption|createCDATASection|createComment|
  #                 createContextualFragment|createDocument|createDocumentFragment|
  #                 createDocumentType|createElement|createElementNS|createEntityReference|
  #                 createEvent|createExpression|createHTMLDocument|createNodeIterator|
  #                 createNSResolver|createProcessingInstruction|createRange|createShadowRoot|
  #                 createTBody|createTextNode|createTFoot|createTHead|createTreeWalker|delete|
  #                 deleteCaption|deleteCell|deleteContents|deleteData|deleteRow|deleteTFoot|
  #                 deleteTHead|detach|disconnect|dispatchEvent|elementFromPoint|elementsFromPoint|
  #                 enableStyleSheetsForSet|entries|evaluate|execCommand|exitFullscreen|
  #                 exitPointerLock|expand|extractContents|fastSeek|firstChild|focus|forEach|get|
  #                 getAll|getAnimations|getAttribute|getAttributeNames|getAttributeNode|
  #                 getAttributeNodeNS|getAttributeNS|getBoundingClientRect|getBoxQuads|
  #                 getClientRects|getContext|getDestinationInsertionPoints|getElementById|
  #                 getElementsByClassName|getElementsByName|getElementsByTagName|
  #                 getElementsByTagNameNS|getItem|getNamedItem|getSelection|getStartDate|
  #                 getVideoPlaybackQuality|has|hasAttribute|hasAttributeNS|hasAttributes|
  #                 hasChildNodes|hasFeature|hasFocus|importNode|initEvent|insertAdjacentElement|
  #                 insertAdjacentHTML|insertAdjacentText|insertBefore|insertCell|insertData|
  #                 insertNode|insertRow|intersectsNode|isDefaultNamespace|isEqualNode|
  #                 isPointInRange|isSameNode|item|key|keys|lastChild|load|lookupNamespaceURI|
  #                 lookupPrefix|matches|move|moveAttribute|moveAttributeNode|moveChild|
  #                 moveNamedItem|namedItem|nextNode|nextSibling|normalize|observe|open|
  #                 parentNode|pause|play|postMessage|prepend|preventDefault|previousNode|
  #                 previousSibling|probablySupportsContext|queryCommandEnabled|
  #                 queryCommandIndeterm|queryCommandState|queryCommandSupported|queryCommandValue|
  #                 querySelector|querySelectorAll|registerContentHandler|registerElement|
  #                 registerProtocolHandler|releaseCapture|releaseEvents|remove|removeAttribute|
  #                 removeAttributeNode|removeAttributeNS|removeChild|removeEventListener|
  #                 removeItem|replace|replaceChild|replaceData|replaceWith|reportValidity|
  #                 requestFullscreen|requestPointerLock|reset|scroll|scrollBy|scrollIntoView|
  #                 scrollTo|seekToNextFrame|select|selectNode|selectNodeContents|set|setAttribute|
  #                 setAttributeNode|setAttributeNodeNS|setAttributeNS|setCapture|
  #                 setCustomValidity|setEnd|setEndAfter|setEndBefore|setItem|setNamedItem|
  #                 setRangeText|setSelectionRange|setSinkId|setStart|setStartAfter|setStartBefore|
  #                 slice|splitText|stepDown|stepUp|stopImmediatePropagation|stopPropagation|
  #                 submit|substringData|supports|surroundContents|takeRecords|terminate|toBlob|
  #                 toDataURL|toggle|toString|values|write|writeln)\\b
  #               '''
  #               'name': 'support.function.dom.js'
  #             }
  #             {
  #               'match': "[a-zA-Z_$][\\w$]*"
  #               'name': 'entity.name.function.js'
  #             }
  #             {
  #               'match': '\\d[\\w$]*'
  #               'name': 'invalid.illegal.identifier.js'
  #             }
  #           ]
  #       'end': '(?<=\\))'
  #       'name': 'meta.method-call.js'
  #       'patterns': [
  #         {
  #           'include': '#arguments'
  #         }
  #       ]
  #     }
  #   ]
  'function_calls':
    'patterns': [
      {
        # functionCall(arg1, "arg2", [...])
        'begin': '([\\w$]+)\\s*(?=\\()'
        'beginCaptures':
          '1':
            'patterns': [
              {
                'match': '''(?x)
                  \\b(isNaN|isFinite|eval|uneval|parseInt|parseFloat|decodeURI|
                  decodeURIComponent|encodeURI|encodeURIComponent|escape|unescape|
                  require|set(Interval|Timeout)|clear(Interval|Timeout))\\b
                '''
                'name': 'support.function.js'
              }
              {
                'match': "[a-zA-Z_$][\\w$]*"
                'name': 'entity.name.function.js'
              }
              {
                'match': '\\d[\\w$]*'
                'name': 'invalid.illegal.identifier.js'
              }
            ]
        'end': '(?<=\\))'
        'name': 'meta.function-call.js'
        'patterns': [
          {
            'include': '#arguments'
          }
        ]
      }
    ]
  'objects':
    'patterns': [
      {
        # OBJ in OBJ.prop, OBJ.methodCall()
        'match': '[A-Z][A-Z0-9_$]*(?=\\s*\\.\\s*[a-zA-Z_$]\\w*)'
        'name': 'constant.other.object.js'
      }
      # {
      #   # obj in obj.prop, obj.methodCall()
      #   'match': '[a-zA-Z_$][\\w$]*(?=\\s*\\.\\s*[a-zA-Z_$]\\w*)'
      #   'name': 'variable.other.object.js'
      # }
    ]
  'properties':
    'patterns': [
      {
        # PROP1 in obj.PROP1.prop2, func().PROP1.prop2
        'match': '(\\.)\\s*([A-Z][A-Z0-9_$]*\\b\\$*)(?=\\s*\\.\\s*[a-zA-Z_$]\\w*)'
        'captures':
          '1':
            'name': 'meta.delimiter.property.period.js'
          '2':
            'name': 'constant.other.object.property.js'
      }
      # {
      #   # prop1 in obj.prop1.prop2, func().prop1.prop2
      #   'match': '(\\.)\\s*(\\$*[a-zA-Z_$][\\w$]*)(?=\\s*\\.\\s*[a-zA-Z_$]\\w*)'
      #   'captures':
      #     '1':
      #       'name': 'meta.delimiter.property.period.js'
      #     '2':
      #       'name': 'variable.other.object.property.js'
      # }
      {
        # PROP in obj.PROP, func().PROP
        'match': '(\\.)\\s*([A-Z][A-Z0-9_$]*\\b\\$*)'
        'captures':
          '1':
            'name': 'meta.delimiter.property.period.js'
          '2':
            'name': 'constant.other.property.js'
      }


      # # PROPERTIES OF OBJECTS
      # {
      #   # prop in obj.prop, func().prop
      #   'match': '(\\.)\\s*(\\$*[a-zA-Z_$][\\w$]*)'
      #   'captures':
      #     '1':
      #       'name': 'meta.delimiter.property.period.js'
      #     '2':
      #       'name': 'variable.other.property.js'
      # }



      {
        # 123illegal in obj.123illegal, func().123illegal
        'match': '(\\.)\\s*([0-9][\\w$]*)'
        'captures':
          '1':
            'name': 'meta.delimiter.property.period.js'
          '2':
            'name': 'invalid.illegal.identifier.js'
      }
    ]
  'interpolated_js':
    'patterns': [
      {
        'begin': '\\${'
        'captures':
          '0':
            'name': 'punctuation.section.embedded.js'
        'end': '}'
        'name': 'source.js.embedded.source'
        'patterns': [
          {
            'begin': '{'
            'beginCaptures':
              '0':
                'name': 'meta.brace.curly.js'
            'end': '}'
            'endCaptures':
              '0':
                'name': 'meta.brace.curly.js'
            'patterns': [
              {
                'include': '$self'
              }
            ]
          }
          {
            'include': '$self'
          }
        ]
      }
    ]
  'comments':
    'patterns': [
      {
        'captures':
          '1':
            'name': 'punctuation.section.begin.comment.js'
          '2':
            'name': 'punctuation.section.end.comment.js'
        'match': '(/\\*)(\\*/)'
        'name': 'comment.block.empty.js'
      }
      {
        'begin': '/\\*\\*'
        'beginCaptures':
          '0':
            'name': 'punctuation.section.begin.comment.js'
        'end': '\\*/'
        'endCaptures':
          '0':
            'name': 'punctuation.section.end.comment.js'
        'name': 'comment.block.documentation.js'
        'patterns': [
          {
            'include': 'source.jsdoc'
          }
        ]
      }
      {
        'begin': '/\\*'
        'beginCaptures':
          '0':
            'name': 'punctuation.section.begin.comment.js'
        'end': '\\*/'
        'endCaptures':
          '0':
            'name': 'punctuation.section.end.comment.js'
        'name': 'comment.block.js'
      }
      {
        'begin': '//'
        'beginCaptures':
          '0':
            'name': 'punctuation.definition.comment.js'
        'end': '$'
        'name': 'comment.line.double-slash.js'
      }
    ]
  'switch_statement':
    'patterns': [
      {
        # switch(expression) {...}
        'begin': '\\bswitch\\b'
        'beginCaptures':
          '0':
            'name': 'keyword.control.switch.js'
        'end': '}'
        'endCaptures':
          '0':
            'name': 'punctuation.definition.section.switch-block.end.bracket.curly.js'
        'name': 'meta.switch-statement.js'
        'patterns': [
          {
            'begin': '\\('
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.switch-expression.begin.bracket.round.js'
            'end': '\\)'
            'endCaptures':
              '0':
                'name': 'punctuation.definition.switch-expression.end.bracket.round.js'
            'patterns': [
              'include': '$self'
            ]
          }
          {
            'begin': '{'
            'beginCaptures':
              '0':
                'name': 'punctuation.definition.section.switch-block.begin.bracket.curly.js'
            'end': '(?=})'
            'patterns': [
              {
                'begin': '\\bcase\\b'
                'beginCaptures':
                  '0':
                    'name': 'keyword.control.case.js'
                'end': ':'
                'endCaptures':
                  '0':
                    'name': 'punctuation.definition.section.case-statement.js'
                'patterns': [
                  {
                    'include': '#prevent_object_keys_matching'
                  }
                  {
                    'include': '$self'
                  }
                ]
              }
              {
                'match': '(?:^\\s*)?\\b(default)\\b\\s*(:)'
                'captures':
                  '1':
                    'name': 'keyword.control.default.js'
                  '2':
                    'name': 'punctuation.definition.section.case-statement.js'
              }
              {
                'include': '$self'
              }
            ]
          }
        ]
      }
    ]
